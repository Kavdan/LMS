# Generated by Django 4.0.8 on 2024-05-11 11:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('course', '0008_alter_course_level_alter_course_semester_and_more'),
        ('quiz', '0004_alter_question_figure_alter_quiz_description'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='progress',
            options={'verbose_name': 'Прогресс пользователя', 'verbose_name_plural': 'Запись успеваемости пользователя'},
        ),
        migrations.AlterField(
            model_name='choice',
            name='choice',
            field=models.CharField(help_text='Введите текст выбора, который вы хотите отобразить', max_length=1000, verbose_name='Содержание'),
        ),
        migrations.AlterField(
            model_name='choice',
            name='correct',
            field=models.BooleanField(default=False, help_text='Это правильный ответ?', verbose_name='Правильный'),
        ),
        migrations.AlterField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.mcquestion', verbose_name='Вопрос'),
        ),
        migrations.AlterField(
            model_name='mcquestion',
            name='choice_order',
            field=models.CharField(blank=True, choices=[('content', 'По содержанию'), ('random', 'Случайный'), ('none', 'Нет')], help_text='Порядок, в котором варианты выбора множественного выбора отображаются пользователю', max_length=30, null=True, verbose_name='Порядок выбора'),
        ),
        migrations.AlterField(
            model_name='progress',
            name='score',
            field=models.CharField(max_length=1024, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Оценка'),
        ),
        migrations.AlterField(
            model_name='progress',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='question',
            name='content',
            field=models.CharField(help_text='Введите текст вопроса, который вы хотите отобразить', max_length=1000, verbose_name='Вопрос'),
        ),
        migrations.AlterField(
            model_name='question',
            name='explanation',
            field=models.TextField(blank=True, help_text='Объяснение, которое будет показано после ответа на вопрос.', max_length=2000, verbose_name='Объяснение'),
        ),
        migrations.AlterField(
            model_name='question',
            name='figure',
            field=models.ImageField(blank=True, help_text='Добавьте изображение для вопроса, если это необходимо.', null=True, upload_to='uploads/%Y/%m/%d', verbose_name='Рисунок'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='answers_at_end',
            field=models.BooleanField(default=False, help_text='Правильный ответ НЕ показывается после вопроса. Ответы отображаются в конце.', verbose_name='Ответы в конце'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='category',
            field=models.TextField(blank=True, choices=[('assignment', 'Домашнее задание'), ('exam', 'Экзамен'), ('practice', 'Практический тест')]),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='description',
            field=models.TextField(blank=True, help_text='Подробное описание теста', verbose_name='Описание'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='draft',
            field=models.BooleanField(blank=True, default=False, help_text='Если да, то тест не отображается в списке тестов и может быть пройден только пользователями, которые могут редактировать тесты.', verbose_name='Черновик'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='exam_paper',
            field=models.BooleanField(default=False, help_text='Если да, результат каждой попытки пользователя будет сохранен. Необходимо для оценки.', verbose_name='Экзаменационная работа'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='pass_mark',
            field=models.SmallIntegerField(blank=True, default=50, help_text='Процент, необходимый для прохождения экзамена.', validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Процент для прохождения'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='random_order',
            field=models.BooleanField(default=False, help_text='Показывать вопросы в случайном порядке или в том порядке, в котором они установлены?', verbose_name='Случайный порядок'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='single_attempt',
            field=models.BooleanField(default=False, help_text='Если да, пользователю будет разрешена только одна попытка.', verbose_name='Одна попытка'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='title',
            field=models.CharField(max_length=60, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='complete',
            field=models.BooleanField(default=False, verbose_name='Завершено'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='course.course', verbose_name='Курс'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='current_score',
            field=models.IntegerField(verbose_name='Текущая оценка'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='end',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Конец'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='incorrect_questions',
            field=models.CharField(blank=True, max_length=1024, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Неправильные вопросы'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='question_list',
            field=models.CharField(max_length=1024, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Список вопросов'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='question_order',
            field=models.CharField(max_length=1024, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')], verbose_name='Порядок вопросов'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.quiz', verbose_name='Тест'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='start',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Начало'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='user_answers',
            field=models.TextField(blank=True, default='{}', verbose_name='Ответы пользователя'),
        ),
    ]
